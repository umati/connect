/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.7.0, using .NET Server 4.1.0 template (version 0)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
** </auto-generated>
**
** Copyright (c) 2006-2025 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.8
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.8, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://ifw.uni-hannover.de/umatiConnectMazak/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.8/
**
** Created: 21.03.2025
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using UnifiedAutomation.UaBase;

namespace IFW.umatiConnect
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class DataTypes
    {
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the MazakReference Object.
        /// </summary>
        public const uint Machines_MazakReference = 5003;

        /// <summary>
        /// The identifier for the Equipment Object.
        /// </summary>
        public const uint Machines_MazakReference_Equipment = 5004;

        /// <summary>
        /// The identifier for the Identification Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification = 5005;

        /// <summary>
        /// The identifier for the SoftwareIdentification Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification = 5012;

        /// <summary>
        /// The identifier for the Control Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_Control = 5013;

        /// <summary>
        /// The identifier for the OS Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_OS = 5014;

        /// <summary>
        /// The identifier for the Monitoring Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring = 5006;

        /// <summary>
        /// The identifier for the MachineTool Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool = 5007;

        /// <summary>
        /// The identifier for the Axes Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes = 5017;

        /// <summary>
        /// The identifier for the Linear Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear = 5022;

        /// <summary>
        /// The identifier for the xAxis Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis = 5018;

        /// <summary>
        /// The identifier for the yAxis Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_yAxis = 5019;

        /// <summary>
        /// The identifier for the zAxis Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_zAxis = 5020;

        /// <summary>
        /// The identifier for the Rotary Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary = 5021;

        /// <summary>
        /// The identifier for the bAxis Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis = 5016;

        /// <summary>
        /// The identifier for the cAxis Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_cAxis = 5024;

        /// <summary>
        /// The identifier for the Coolant Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Coolant = 5002;

        /// <summary>
        /// The identifier for the MachineryItemState Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState = 5015;

        /// <summary>
        /// The identifier for the MachineryOperationMode Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode = 5001;

        /// <summary>
        /// The identifier for the Notification Object.
        /// </summary>
        public const uint Machines_MazakReference_Notification = 5008;

        /// <summary>
        /// The identifier for the Production Object.
        /// </summary>
        public const uint Machines_MazakReference_Production = 5009;

        /// <summary>
        /// The identifier for the ActiveProgram Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram = 5010;

        /// <summary>
        /// The identifier for the State Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State = 5011;

    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ObjectTypes
    {
    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class Methods
    {
    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTyped in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ReferenceTypes
    {
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the ToolNumber Object.
        /// </summary>
        public const uint Machines_MazakReference_Equipment_ToolNumber = 6024;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_Manufacturer = 6001;

        /// <summary>
        /// The identifier for the ProductInstanceUri Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_ProductInstanceUri = 6002;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SerialNumber = 6003;

        /// <summary>
        /// The identifier for the Identifier Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_Control_Identifier = 6010;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_Control_Manufacturer = 6014;

        /// <summary>
        /// The identifier for the SoftwareRevision Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_Control_SoftwareRevision = 6011;

        /// <summary>
        /// The identifier for the Identifier Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_OS_Identifier = 6012;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_OS_Manufacturer = 6015;

        /// <summary>
        /// The identifier for the SoftwareRevision Object.
        /// </summary>
        public const uint Machines_MazakReference_Identification_SoftwareIdentification_OS_SoftwareRevision = 6013;

        /// <summary>
        /// The identifier for the Availability Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Availability = 6054;

        /// <summary>
        /// The identifier for the AxisFeedrate Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisFeedrate = 6052;

        /// <summary>
        /// The identifier for the AxisState Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisState = 6057;

        /// <summary>
        /// The identifier for the Load Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Load = 6053;

        /// <summary>
        /// The identifier for the Position Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Position = 6051;

        /// <summary>
        /// The identifier for the Temperature Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Temperature = 6056;

        /// <summary>
        /// The identifier for the Angle Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Angle = 6043;

        /// <summary>
        /// The identifier for the AngularVelocity Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AngularVelocity = 6044;

        /// <summary>
        /// The identifier for the AxisState Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AxisState = 6050;

        /// <summary>
        /// The identifier for the Load Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Load = 6045;

        /// <summary>
        /// The identifier for the RotaryMode Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_RotaryMode = 6046;

        /// <summary>
        /// The identifier for the Concentration Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Coolant_Concentration = 6035;

        /// <summary>
        /// The identifier for the Temperature Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Coolant_Temperature = 6036;

        /// <summary>
        /// The identifier for the CuttingSpeed Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_CuttingSpeed = 6028;

        /// <summary>
        /// The identifier for the DoorState Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_DoorState = 6030;

        /// <summary>
        /// The identifier for the Angle Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle = 6023;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle_Id = 6055;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState = 6041;

        /// <summary>
        /// The identifier for the EffectiveDisplayName Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_EffectiveDisplayName = 6047;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Id = 6042;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Name = 6048;

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Number = 6049;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState = 6025;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState_Id = 6026;

        /// <summary>
        /// The identifier for the DRY_RUN Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_DRY_RUN = 6027;

        /// <summary>
        /// The identifier for the MACHINE_AXIS_LOCK Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_MACHINE_AXIS_LOCK = 6029;

        /// <summary>
        /// The identifier for the SINGLE_BLOCK Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_SINGLE_BLOCK = 6032;

        /// <summary>
        /// The identifier for the Orientation Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Orientation = 6031;

        /// <summary>
        /// The identifier for the PathPosition Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_PathPosition = 6033;

        /// <summary>
        /// The identifier for the Temperature Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_Temperature = 6039;

        /// <summary>
        /// The identifier for the FeedOverride Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_FeedOverride = 6016;

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EngineeringUnits = 6017;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EURange = 6018;

        /// <summary>
        /// The identifier for the OperationMode Object.
        /// </summary>
        public const uint Machines_MazakReference_Monitoring_MachineTool_OperationMode = 6004;

        /// <summary>
        /// The identifier for the EmergencyStop Object.
        /// </summary>
        public const uint Machines_MazakReference_Notification_EmergencyStop = 6022;

        /// <summary>
        /// The identifier for the DesiredParts Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_DesiredParts = 6020;

        /// <summary>
        /// The identifier for the Material Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_Material = 6038;

        /// <summary>
        /// The identifier for the PartCounter Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_PartCounter = 6021;

        /// <summary>
        /// The identifier for the JobIdentifier Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_JobIdentifier = 6019;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_Name = 6005;

        /// <summary>
        /// The identifier for the NumberInList Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_NumberInList = 6006;

        /// <summary>
        /// The identifier for the ProcessTimer Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_ProcessTimer = 6034;

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State_CurrentState = 6007;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Id = 6008;

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Number = 6009;

        /// <summary>
        /// The identifier for the Rotation Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State_Rotation = 6058;

        /// <summary>
        /// The identifier for the Translation Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State_Translation = 6059;

        /// <summary>
        /// The identifier for the WorkOffset Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_ActiveProgram_State_WorkOffset = 6060;

        /// <summary>
        /// The identifier for the PalletID Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_PalletID = 6040;

        /// <summary>
        /// The identifier for the User Object.
        /// </summary>
        public const uint Machines_MazakReference_Production_User = 6037;

    }
    #endregion

    #region VariableTypes Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class VariableTypes
    {
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all DataTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class DataTypeIds
    {
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Methods in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class MethodIds
    {
    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the Machines_MazakReference Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference = new ExpandedNodeId(Objects.Machines_MazakReference, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Equipment Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Equipment = new ExpandedNodeId(Objects.Machines_MazakReference_Equipment, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification = new ExpandedNodeId(Objects.Machines_MazakReference_Identification, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification = new ExpandedNodeId(Objects.Machines_MazakReference_Identification_SoftwareIdentification, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_Control Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_Control = new ExpandedNodeId(Objects.Machines_MazakReference_Identification_SoftwareIdentification_Control, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_OS Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_OS = new ExpandedNodeId(Objects.Machines_MazakReference_Identification_SoftwareIdentification_OS, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_yAxis Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_yAxis = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_yAxis, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_zAxis Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_zAxis = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_zAxis, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_cAxis Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_cAxis = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_cAxis, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Coolant Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Coolant = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_Coolant, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode = new ExpandedNodeId(Objects.Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Notification Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Notification = new ExpandedNodeId(Objects.Machines_MazakReference_Notification, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production = new ExpandedNodeId(Objects.Machines_MazakReference_Production, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram = new ExpandedNodeId(Objects.Machines_MazakReference_Production_ActiveProgram, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State Object.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State = new ExpandedNodeId(Objects.Machines_MazakReference_Production_ActiveProgram_State, Namespaces.umatiConnect);

    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ObjectTypeIds
    {
    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all ReferenceTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ReferenceTypeIds
    {
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Variables in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the Machines_MazakReference_Equipment_ToolNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Equipment_ToolNumber = new ExpandedNodeId(Variables.Machines_MazakReference_Equipment_ToolNumber, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_Manufacturer = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_Manufacturer, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_ProductInstanceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_ProductInstanceUri = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_ProductInstanceUri, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SerialNumber = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SerialNumber, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_Control_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_Control_Identifier = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SoftwareIdentification_Control_Identifier, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_Control_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_Control_Manufacturer = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SoftwareIdentification_Control_Manufacturer, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_Control_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_Control_SoftwareRevision = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SoftwareIdentification_Control_SoftwareRevision, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_OS_Identifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_OS_Identifier = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SoftwareIdentification_OS_Identifier, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_OS_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_OS_Manufacturer = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SoftwareIdentification_OS_Manufacturer, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Identification_SoftwareIdentification_OS_SoftwareRevision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Identification_SoftwareIdentification_OS_SoftwareRevision = new ExpandedNodeId(Variables.Machines_MazakReference_Identification_SoftwareIdentification_OS_SoftwareRevision, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Availability Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Availability = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Availability, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisFeedrate Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisFeedrate = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisFeedrate, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisState = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_AxisState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Load Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Load = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Load, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Position Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Position = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Position, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Temperature = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Linear_xAxis_Temperature, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Angle Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Angle = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Angle, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AngularVelocity Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AngularVelocity = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AngularVelocity, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AxisState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AxisState = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_AxisState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Load Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Load = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_Load, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_RotaryMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_RotaryMode = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Axes_Rotary_bAxis_RotaryMode, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Coolant_Concentration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Coolant_Concentration = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Coolant_Concentration, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Coolant_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Coolant_Temperature = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Coolant_Temperature, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_CuttingSpeed Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_CuttingSpeed = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_CuttingSpeed, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_DoorState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_DoorState = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_DoorState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle_Id = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_Angle_Id, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_EffectiveDisplayName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_EffectiveDisplayName = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_EffectiveDisplayName, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Id = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Id, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Name = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Name, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Number = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryItemState_CurrentState_Number, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState_Id = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_CurrentState_Id, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_DRY_RUN Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_DRY_RUN = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_DRY_RUN, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_MACHINE_AXIS_LOCK Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_MACHINE_AXIS_LOCK = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_MACHINE_AXIS_LOCK, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_SINGLE_BLOCK Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_SINGLE_BLOCK = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_MachineryOperationMode_SINGLE_BLOCK, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Orientation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Orientation = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Orientation, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_PathPosition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_PathPosition = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_PathPosition, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_Temperature = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_Temperature, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_FeedOverride Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_FeedOverride = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_FeedOverride, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EngineeringUnits = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EngineeringUnits, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EURange = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_FeedOverride_EURange, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Monitoring_MachineTool_OperationMode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Monitoring_MachineTool_OperationMode = new ExpandedNodeId(Variables.Machines_MazakReference_Monitoring_MachineTool_OperationMode, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Notification_EmergencyStop Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Notification_EmergencyStop = new ExpandedNodeId(Variables.Machines_MazakReference_Notification_EmergencyStop, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_DesiredParts Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_DesiredParts = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_DesiredParts, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_Material Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_Material = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_Material, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_PartCounter Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_PartCounter = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_PartCounter, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_JobIdentifier Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_JobIdentifier = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_JobIdentifier, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_Name Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_Name = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_Name, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_NumberInList Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_NumberInList = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_NumberInList, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_ProcessTimer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_ProcessTimer = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_ProcessTimer, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State_CurrentState = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_State_CurrentState, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Id = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Id, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Number = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_State_CurrentState_Number, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State_Rotation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State_Rotation = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_State_Rotation, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State_Translation Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State_Translation = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_State_Translation, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_ActiveProgram_State_WorkOffset Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_ActiveProgram_State_WorkOffset = new ExpandedNodeId(Variables.Machines_MazakReference_Production_ActiveProgram_State_WorkOffset, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_PalletID Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_PalletID = new ExpandedNodeId(Variables.Machines_MazakReference_Production_PalletID, Namespaces.umatiConnect);

        /// <summary>
        /// The identifier for the Machines_MazakReference_Production_User Variable.
        /// </summary>
        public static readonly ExpandedNodeId Machines_MazakReference_Production_User = new ExpandedNodeId(Variables.Machines_MazakReference_Production_User, Namespaces.umatiConnect);

    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all VariableType in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class VariableTypeIds
    {
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the Angle component.
        /// </summary>
        public const string Angle = "Angle";
        /// <summary>
        /// The BrowseName for the AngularVelocity component.
        /// </summary>
        public const string AngularVelocity = "AngularVelocity";
        /// <summary>
        /// The BrowseName for the Availability component.
        /// </summary>
        public const string Availability = "Availability";
        /// <summary>
        /// The BrowseName for the Axes component.
        /// </summary>
        public const string Axes = "Axes";
        /// <summary>
        /// The BrowseName for the AxisFeedrate component.
        /// </summary>
        public const string AxisFeedrate = "AxisFeedrate";
        /// <summary>
        /// The BrowseName for the AxisState component.
        /// </summary>
        public const string AxisState = "AxisState";
        /// <summary>
        /// The BrowseName for the Concentration component.
        /// </summary>
        public const string Concentration = "Concentration";
        /// <summary>
        /// The BrowseName for the Coolant component.
        /// </summary>
        public const string Coolant = "Coolant";
        /// <summary>
        /// The BrowseName for the CuttingSpeed component.
        /// </summary>
        public const string CuttingSpeed = "CuttingSpeed";
        /// <summary>
        /// The BrowseName for the DRY_RUN component.
        /// </summary>
        public const string DRY_RUN = "DRY_RUN";
        /// <summary>
        /// The BrowseName for the DesiredParts component.
        /// </summary>
        public const string DesiredParts = "DesiredParts";
        /// <summary>
        /// The BrowseName for the DoorState component.
        /// </summary>
        public const string DoorState = "DoorState";
        /// <summary>
        /// The BrowseName for the EmergencyStop component.
        /// </summary>
        public const string EmergencyStop = "EmergencyStop";
        /// <summary>
        /// The BrowseName for the Linear component.
        /// </summary>
        public const string Linear = "Linear";
        /// <summary>
        /// The BrowseName for the Load component.
        /// </summary>
        public const string Load = "Load";
        /// <summary>
        /// The BrowseName for the MACHINE_AXIS_LOCK component.
        /// </summary>
        public const string MACHINE_AXIS_LOCK = "MACHINE_AXIS_LOCK";
        /// <summary>
        /// The BrowseName for the Manufacturer component.
        /// </summary>
        public const string Manufacturer = "Manufacturer";
        /// <summary>
        /// The BrowseName for the Material component.
        /// </summary>
        public const string Material = "Material";
        /// <summary>
        /// The BrowseName for the MazakReference component.
        /// </summary>
        public const string MazakReference = "MazakReference";
        /// <summary>
        /// The BrowseName for the OS component.
        /// </summary>
        public const string OS = "OS";
        /// <summary>
        /// The BrowseName for the Orientation component.
        /// </summary>
        public const string Orientation = "Orientation";
        /// <summary>
        /// The BrowseName for the PalletID component.
        /// </summary>
        public const string PalletID = "PalletID";
        /// <summary>
        /// The BrowseName for the PartCounter component.
        /// </summary>
        public const string PartCounter = "PartCounter";
        /// <summary>
        /// The BrowseName for the PathPosition component.
        /// </summary>
        public const string PathPosition = "PathPosition";
        /// <summary>
        /// The BrowseName for the Position component.
        /// </summary>
        public const string Position = "Position";
        /// <summary>
        /// The BrowseName for the ProcessTimer component.
        /// </summary>
        public const string ProcessTimer = "ProcessTimer";
        /// <summary>
        /// The BrowseName for the Rotary component.
        /// </summary>
        public const string Rotary = "Rotary";
        /// <summary>
        /// The BrowseName for the RotaryMode component.
        /// </summary>
        public const string RotaryMode = "RotaryMode";
        /// <summary>
        /// The BrowseName for the Rotation component.
        /// </summary>
        public const string Rotation = "Rotation";
        /// <summary>
        /// The BrowseName for the SINGLE_BLOCK component.
        /// </summary>
        public const string SINGLE_BLOCK = "SINGLE_BLOCK";
        /// <summary>
        /// The BrowseName for the Temperature component.
        /// </summary>
        public const string Temperature = "Temperature";
        /// <summary>
        /// The BrowseName for the ToolNumber component.
        /// </summary>
        public const string ToolNumber = "ToolNumber";
        /// <summary>
        /// The BrowseName for the Translation component.
        /// </summary>
        public const string Translation = "Translation";
        /// <summary>
        /// The BrowseName for the User component.
        /// </summary>
        public const string User = "User";
        /// <summary>
        /// The BrowseName for the WorkOffset component.
        /// </summary>
        public const string WorkOffset = "WorkOffset";
        /// <summary>
        /// The BrowseName for the bAxis component.
        /// </summary>
        public const string bAxis = "bAxis";
        /// <summary>
        /// The BrowseName for the cAxis component.
        /// </summary>
        public const string cAxis = "cAxis";
        /// <summary>
        /// The BrowseName for the xAxis component.
        /// </summary>
        public const string xAxis = "xAxis";
        /// <summary>
        /// The BrowseName for the yAxis component.
        /// </summary>
        public const string yAxis = "yAxis";
        /// <summary>
        /// The BrowseName for the zAxis component.
        /// </summary>
        public const string zAxis = "zAxis";
    }
    #endregion

    #region AbsolueName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class AbsoluteNames
    {
        /// <summary>
        /// The AbsoluteName for the Angle component.
        /// </summary>
        public static readonly AbsoluteName Angle = new AbsoluteName(BrowseNames.Angle, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the AngularVelocity component.
        /// </summary>
        public static readonly AbsoluteName AngularVelocity = new AbsoluteName(BrowseNames.AngularVelocity, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Availability component.
        /// </summary>
        public static readonly AbsoluteName Availability = new AbsoluteName(BrowseNames.Availability, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Axes component.
        /// </summary>
        public static readonly AbsoluteName Axes = new AbsoluteName(BrowseNames.Axes, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the AxisFeedrate component.
        /// </summary>
        public static readonly AbsoluteName AxisFeedrate = new AbsoluteName(BrowseNames.AxisFeedrate, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the AxisState component.
        /// </summary>
        public static readonly AbsoluteName AxisState = new AbsoluteName(BrowseNames.AxisState, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Concentration component.
        /// </summary>
        public static readonly AbsoluteName Concentration = new AbsoluteName(BrowseNames.Concentration, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Coolant component.
        /// </summary>
        public static readonly AbsoluteName Coolant = new AbsoluteName(BrowseNames.Coolant, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the CuttingSpeed component.
        /// </summary>
        public static readonly AbsoluteName CuttingSpeed = new AbsoluteName(BrowseNames.CuttingSpeed, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the DRY_RUN component.
        /// </summary>
        public static readonly AbsoluteName DRY_RUN = new AbsoluteName(BrowseNames.DRY_RUN, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the DesiredParts component.
        /// </summary>
        public static readonly AbsoluteName DesiredParts = new AbsoluteName(BrowseNames.DesiredParts, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the DoorState component.
        /// </summary>
        public static readonly AbsoluteName DoorState = new AbsoluteName(BrowseNames.DoorState, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the EmergencyStop component.
        /// </summary>
        public static readonly AbsoluteName EmergencyStop = new AbsoluteName(BrowseNames.EmergencyStop, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Linear component.
        /// </summary>
        public static readonly AbsoluteName Linear = new AbsoluteName(BrowseNames.Linear, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Load component.
        /// </summary>
        public static readonly AbsoluteName Load = new AbsoluteName(BrowseNames.Load, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the MACHINE_AXIS_LOCK component.
        /// </summary>
        public static readonly AbsoluteName MACHINE_AXIS_LOCK = new AbsoluteName(BrowseNames.MACHINE_AXIS_LOCK, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Manufacturer component.
        /// </summary>
        public static readonly AbsoluteName Manufacturer = new AbsoluteName(BrowseNames.Manufacturer, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Material component.
        /// </summary>
        public static readonly AbsoluteName Material = new AbsoluteName(BrowseNames.Material, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the MazakReference component.
        /// </summary>
        public static readonly AbsoluteName MazakReference = new AbsoluteName(BrowseNames.MazakReference, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the OS component.
        /// </summary>
        public static readonly AbsoluteName OS = new AbsoluteName(BrowseNames.OS, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Orientation component.
        /// </summary>
        public static readonly AbsoluteName Orientation = new AbsoluteName(BrowseNames.Orientation, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the PalletID component.
        /// </summary>
        public static readonly AbsoluteName PalletID = new AbsoluteName(BrowseNames.PalletID, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the PartCounter component.
        /// </summary>
        public static readonly AbsoluteName PartCounter = new AbsoluteName(BrowseNames.PartCounter, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the PathPosition component.
        /// </summary>
        public static readonly AbsoluteName PathPosition = new AbsoluteName(BrowseNames.PathPosition, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Position component.
        /// </summary>
        public static readonly AbsoluteName Position = new AbsoluteName(BrowseNames.Position, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the ProcessTimer component.
        /// </summary>
        public static readonly AbsoluteName ProcessTimer = new AbsoluteName(BrowseNames.ProcessTimer, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Rotary component.
        /// </summary>
        public static readonly AbsoluteName Rotary = new AbsoluteName(BrowseNames.Rotary, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the RotaryMode component.
        /// </summary>
        public static readonly AbsoluteName RotaryMode = new AbsoluteName(BrowseNames.RotaryMode, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Rotation component.
        /// </summary>
        public static readonly AbsoluteName Rotation = new AbsoluteName(BrowseNames.Rotation, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the SINGLE_BLOCK component.
        /// </summary>
        public static readonly AbsoluteName SINGLE_BLOCK = new AbsoluteName(BrowseNames.SINGLE_BLOCK, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Temperature component.
        /// </summary>
        public static readonly AbsoluteName Temperature = new AbsoluteName(BrowseNames.Temperature, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the ToolNumber component.
        /// </summary>
        public static readonly AbsoluteName ToolNumber = new AbsoluteName(BrowseNames.ToolNumber, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the Translation component.
        /// </summary>
        public static readonly AbsoluteName Translation = new AbsoluteName(BrowseNames.Translation, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the User component.
        /// </summary>
        public static readonly AbsoluteName User = new AbsoluteName(BrowseNames.User, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the WorkOffset component.
        /// </summary>
        public static readonly AbsoluteName WorkOffset = new AbsoluteName(BrowseNames.WorkOffset, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the bAxis component.
        /// </summary>
        public static readonly AbsoluteName bAxis = new AbsoluteName(BrowseNames.bAxis, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the cAxis component.
        /// </summary>
        public static readonly AbsoluteName cAxis = new AbsoluteName(BrowseNames.cAxis, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the xAxis component.
        /// </summary>
        public static readonly AbsoluteName xAxis = new AbsoluteName(BrowseNames.xAxis, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the yAxis component.
        /// </summary>
        public static readonly AbsoluteName yAxis = new AbsoluteName(BrowseNames.yAxis, Namespaces.umatiConnect);
        /// <summary>
        /// The AbsoluteName for the zAxis component.
        /// </summary>
        public static readonly AbsoluteName zAxis = new AbsoluteName(BrowseNames.zAxis, Namespaces.umatiConnect);
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the Model.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the umatiConnect namespace.
        /// </summary>
        public const string umatiConnect = "http://ifw.uni-hannover.de/umatiConnectMazak/";

        /// <summary>
        /// The URI for the umatiConnectXsd namespace.
        /// </summary>
        public const string umatiConnectXsd = "http://ifw.uni-hannover.de/umatiConnectMazak/Types.xsd";
    }
    #endregion
}

